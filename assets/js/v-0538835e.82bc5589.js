"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[741],{6900:(e,t,i)=>{i.r(t),i.d(t,{data:()=>o});const o={key:"v-0538835e",path:"/guide/option-engineer.html",title:"Engineering Related",lang:"en-US",frontmatter:{title:"Engineering Related",sidebarDepth:1,lastUpdated:!0,sitemap:{priority:.6}},excerpt:"",headers:[{level:2,title:"scopes",slug:"scopes",children:[]},{level:2,title:"scopeOverrides",slug:"scopeoverrides",children:[]},{level:2,title:"scopeFilters",slug:"scopefilters",children:[]},{level:2,title:"enableMultipleScopes",slug:"enablemultiplescopes",children:[]},{level:2,title:"scopeEnumSeparator",slug:"scopeenumseparator",children:[]},{level:2,title:"allowCustomScopes",slug:"allowcustomscopes",children:[]},{level:2,title:"allowEmptyScopes",slug:"allowemptyscopes",children:[]},{level:2,title:"allowBreakingChanges",slug:"allowbreakingchanges",children:[]},{level:2,title:"upperCaseSubject",slug:"uppercasesubject",children:[]},{level:2,title:"breaklineNumber",slug:"breaklinenumber",children:[]},{level:2,title:"breaklineChar",slug:"breaklinechar",children:[]},{level:2,title:"skipQuestions",slug:"skipquestions",children:[]},{level:2,title:"issuePrefixs",slug:"issueprefixs",children:[]},{level:2,title:"allowCustomIssuePrefixs",slug:"allowcustomissueprefixs",children:[]},{level:2,title:"allowEmptyIssuePrefixs",slug:"allowemptyissueprefixs",children:[]},{level:2,title:"maxHeaderLength",slug:"maxheaderlength",children:[]},{level:2,title:"maxSubjectLength",slug:"maxsubjectlength",children:[]},{level:2,title:"minSubjectLength",slug:"minsubjectlength",children:[]}],git:{updatedTime:1654629199e3,contributors:[{name:"Zhengqbbb",email:"1074059947@qq.com",commits:1}]},filePathRelative:"guide/option-engineer.md"}},7238:(e,t,i)=>{i.r(t),i.d(t,{default:()=>K});var o=i(7293);const s=(0,o.uE)('<h1 id="options-engineering-related" tabindex="-1"><a class="header-anchor" href="#options-engineering-related" aria-hidden="true">#</a> Options - Engineering Related</h1><h2 id="scopes" tabindex="-1"><a class="header-anchor" href="#scopes" aria-hidden="true">#</a> scopes</h2><ul><li><strong>description</strong> : custom selection <strong>module scope</strong> command line display information</li><li><strong>type</strong> : <code>string[] | Array&lt;{ name: string, value?: string }&gt;</code></li><li><strong>default</strong> : <code>[]</code></li></ul>',3),n={class:"custom-container tip"},l=(0,o._)("p",{class:"custom-container-title"},"TIP",-1),r=(0,o.Uk)("If you define a "),a=(0,o._)("code",null,"scope-enum",-1),c=(0,o.Uk)(" using the "),d={href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"},u=(0,o.Uk)("commitlint"),g=(0,o.Uk)(" rule, it will be imported automatically."),h=(0,o._)("br",null,null,-1),p=(0,o.Uk)("⇒ can see the recipes"),m=(0,o.uE)('<h2 id="scopeoverrides" tabindex="-1"><a class="header-anchor" href="#scopeoverrides" aria-hidden="true">#</a> scopeOverrides</h2><ul><li><strong>description</strong> : After customizing a specific <strong>type</strong>, <strong>override module scope</strong> command line display information</li><li><strong>type</strong> : <br><code>{ [type: string]: string[] | Array&lt;{ name: string, value?: string }&gt; } | undefined</code></li><li><strong>default</strong> : <code>undefined</code></li><li><strong>example</strong> : <code>scopeOverrides: { &quot;test&quot;: [&quot;e2eTest&quot;, &quot;unitTest&quot;] }</code></li><li><strong>use</strong> : Displays custom module scope selection when selecting module scope after selecting <mark>specific</mark> commit <strong>type</strong> : <code>type</code></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you define <code>scopeOverrides</code> then define generic <code>scopes</code></p></div><h2 id="scopefilters" tabindex="-1"><a class="header-anchor" href="#scopefilters" aria-hidden="true">#</a> scopeFilters</h2><ul><li><strong>description</strong> : Filter select of prompt to select module scopes by the scope.value</li><li><strong>type</strong> : string[]</li><li><strong>default</strong> : <code>[&quot;.DS_Store&quot;]</code></li></ul><h2 id="enablemultiplescopes" tabindex="-1"><a class="header-anchor" href="#enablemultiplescopes" aria-hidden="true">#</a> enableMultipleScopes</h2><ul><li><strong>description</strong> : Whether to enable the use of <strong>multiple scopes mode</strong></li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>false</code></li></ul>',7),f={class:"custom-container tip"},b=(0,o._)("p",{class:"custom-container-title"},"TIP",-1),y=(0,o.Uk)("Try running "),v=(0,o._)("code",null,"checkbox=1 cz",-1),w=(0,o.Uk)(" to "),x=(0,o._)("strong",null,"enable multiple scopes mode in the current session",-1),k=(0,o._)("br",null,null,-1),q=(0,o.Uk)(" Demo And Usage "),I=(0,o.Uk)("⇒ see the recipes"),S=(0,o.uE)('<h2 id="scopeenumseparator" tabindex="-1"><a class="header-anchor" href="#scopeenumseparator" aria-hidden="true">#</a> scopeEnumSeparator</h2><ul><li><strong>description</strong> : Separator between <strong>scopes</strong> in multiple scopes mode</li><li><strong>type</strong> : <code>string</code></li><li><strong>default</strong> : <code>,</code></li></ul><h2 id="allowcustomscopes" tabindex="-1"><a class="header-anchor" href="#allowcustomscopes" aria-hidden="true">#</a> allowCustomScopes</h2><ul><li><strong>description</strong> : whether to display custom options when selecting <strong>module scope</strong> (custom)</li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>true</code></li><li><strong>use</strong> : not using <code>commitlint</code> and want to turn off custom options in select.</li></ul>',4),_={class:"custom-container tip"},E=(0,o._)("p",{class:"custom-container-title"},"TIP",-1),U=(0,o.Uk)("It will automatically detect whether the definition of the "),j={href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"},P=(0,o.Uk)("commitlint"),C=(0,o.Uk)(" rule "),T=(0,o._)("code",null,"scope-enum",-1),A=(0,o.Uk)(" is strict, and it will not be displayed automatically."),W=(0,o.uE)('<h2 id="allowemptyscopes" tabindex="-1"><a class="header-anchor" href="#allowemptyscopes" aria-hidden="true">#</a> allowEmptyScopes</h2><ul><li><strong>description</strong> : whether to display an empty option when selecting <strong>module scope</strong> (empty)</li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>true</code></li></ul>',2),L={class:"custom-container tip"},D=(0,o._)("p",{class:"custom-container-title"},"TIP",-1),N=(0,o.Uk)("It will automatically detect whether the definition of the "),R={href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"},z=(0,o.Uk)("commitlint"),G=(0,o.Uk)(" rule "),B=(0,o._)("code",null,"scope-empty",-1),H=(0,o.Uk)(" is strict, and it will not be displayed automatically."),O=(0,o.uE)('<h2 id="allowbreakingchanges" tabindex="-1"><a class="header-anchor" href="#allowbreakingchanges" aria-hidden="true">#</a> allowBreakingChanges</h2><ul><li><strong>description</strong> : a specific <strong>type</strong> that allows BREAKING CHANGES</li><li><strong>type</strong> : <code>string[]</code></li><li><strong>default</strong> : <code>[&quot;feat&quot;, &quot;fix&quot;]</code></li></ul><h2 id="uppercasesubject" tabindex="-1"><a class="header-anchor" href="#uppercasesubject" aria-hidden="true">#</a> upperCaseSubject</h2><ul><li><strong>description</strong> : Whether to automatically capitalize the first character of the short description (subject)</li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>false</code></li></ul><h2 id="breaklinenumber" tabindex="-1"><a class="header-anchor" href="#breaklinenumber" aria-hidden="true">#</a> breaklineNumber</h2><ul><li><strong>description</strong> : body and BREAKING CHANGES the line wraps automatically according to the character exceeding this value</li><li><strong>type</strong> : <code>number</code></li><li><strong>default</strong> : <code>100</code></li><li><strong>use</strong> : When commitlint is not used and normalization is to be used</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Line breaks mainly based on <strong>word completeness</strong> <br> If commitlint is used, it will automatically read <code>body-max-line-length</code> and set it.</p></div><h2 id="breaklinechar" tabindex="-1"><a class="header-anchor" href="#breaklinechar" aria-hidden="true">#</a> breaklineChar</h2><ul><li><strong>description</strong> : newline characters in detailed descriptions (body) and breaking changes (BREAKING CHANGES)</li><li><strong>type</strong> : <code>string</code></li><li><strong>default</strong> : <code>&quot;|&quot;</code></li></ul><h2 id="skipquestions" tabindex="-1"><a class="header-anchor" href="#skipquestions" aria-hidden="true">#</a> skipQuestions</h2><ul><li><strong>description</strong> : The question specified by the custom selection is not displayed</li><li><strong>type</strong> : <code>Array&lt;&quot;scope&quot; | &quot;body&quot; | &quot;breaking&quot; | &quot;footerPrefix&quot; | &quot;footer&quot;&gt;</code></li><li><strong>default</strong> : <code>[]</code></li></ul><h2 id="issueprefixs" tabindex="-1"><a class="header-anchor" href="#issueprefixs" aria-hidden="true">#</a> issuePrefixs</h2><ul><li><strong>description</strong> : custom select issue prefix</li><li><strong>type</strong> : <code>Array&lt;{ value: string, name: string }&gt;</code></li><li><strong>default</strong> : <code>[{ value: &quot;closed&quot;, name: &quot;closed: ISSUES has been processed&quot; }]</code></li></ul><h2 id="allowcustomissueprefixs" tabindex="-1"><a class="header-anchor" href="#allowcustomissueprefixs" aria-hidden="true">#</a> allowCustomIssuePrefixs</h2><ul><li><strong>description</strong> : whether to display custom options when selecting ISSUES prefixs (custom)</li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>true</code></li></ul><h2 id="allowemptyissueprefixs" tabindex="-1"><a class="header-anchor" href="#allowemptyissueprefixs" aria-hidden="true">#</a> allowEmptyIssuePrefixs</h2><ul><li><strong>description</strong> : whether to display an empty option when selecting ISSUES prefixs (skip)</li><li><strong>type</strong> : <code>boolean</code></li><li><strong>default</strong> : <code>true</code></li></ul><h2 id="maxheaderlength" tabindex="-1"><a class="header-anchor" href="#maxheaderlength" aria-hidden="true">#</a> maxHeaderLength</h2><ul><li><strong>description</strong>: Define the length of the header in the commit message, giving the verification information on the command line</li><li><strong>type</strong>: <code>number</code></li><li><strong>default</strong>: <code>Infinity</code></li><li><strong>use</strong> : when commitlint is not used and normalization is to be used</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you use commitlint, it will automatically read <code>header-max-length</code> and set it to give a prompt on the command line</p></div><h2 id="maxsubjectlength" tabindex="-1"><a class="header-anchor" href="#maxsubjectlength" aria-hidden="true">#</a> maxSubjectLength</h2><ul><li><strong>description</strong>: Define the length of the subject in the commit message, giving the verification information on the command line</li><li><strong>type</strong>: <code>number</code></li><li><strong>default</strong>: <code>Infinity</code></li><li><strong>use</strong> : When commitlint is not used and normalization is to be used</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If using commitlint will automatically read <code>subject-max-length</code> and set it to give a prompt on the command line.</p></div><h2 id="minsubjectlength" tabindex="-1"><a class="header-anchor" href="#minsubjectlength" aria-hidden="true">#</a> minSubjectLength</h2><ul><li><strong>description</strong>: Define the length of the subject in the commit message, giving the verification information on the command line</li><li><strong>type</strong>: <code>number</code></li><li><strong>default</strong> : <code>0</code></li><li><strong>use</strong> : When commitlint is not used and normalization is to be used</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If commitlint is used, it will automatically read <code>subject-min-length</code> and set it to give a prompt on the command line</p></div>',26),F={},K=(0,i(8868).Z)(F,[["render",function(e,t){const i=(0,o.up)("ExternalLinkIcon"),F=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.iD)("div",null,[s,(0,o._)("div",n,[l,(0,o._)("p",null,[r,a,c,(0,o._)("a",d,[u,(0,o.Wm)(i)]),g,h,(0,o.Wm)(F,{to:"/guide/recipes.html#scopes"},{default:(0,o.w5)((()=>[p])),_:1})])]),m,(0,o._)("div",f,[b,(0,o._)("p",null,[y,v,w,x,k,q,(0,o.Wm)(F,{to:"/guide/recipes.html#support-for-multiple-scopes"},{default:(0,o.w5)((()=>[I])),_:1})])]),S,(0,o._)("div",_,[E,(0,o._)("p",null,[U,(0,o._)("a",j,[P,(0,o.Wm)(i)]),C,T,A])]),W,(0,o._)("div",L,[D,(0,o._)("p",null,[N,(0,o._)("a",R,[z,(0,o.Wm)(i)]),G,B,H])]),O])}]])}}]);