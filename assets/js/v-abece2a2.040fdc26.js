"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[842],{8321:(s,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t=JSON.parse('{"key":"v-abece2a2","path":"/zh/guide/recipes.html","title":"小窍门","lang":"zh-CN","frontmatter":{"title":"小窍门","sidebarDepth":2,"lastUpdated":true,"sitemap":{"priority":0.8}},"excerpt":"","headers":[{"level":2,"title":"scopes","slug":"scopes","children":[{"level":3,"title":"针对 项目代码 的 scopes","slug":"针对-项目代码-的-scopes","children":[]},{"level":3,"title":"针对 项目业务 的 scopes","slug":"针对-项目业务-的-scopes","children":[]}]},{"level":2,"title":"issuePrefixs","slug":"issueprefixs","children":[]},{"level":2,"title":"default","slug":"default","children":[{"level":3,"title":"defaultScope","slug":"defaultscope","children":[]},{"level":3,"title":"defaultSubject","slug":"defaultsubject","children":[]},{"level":3,"title":"defaultIssues","slug":"defaultissues","children":[]}]}],"git":{"updatedTime":1655096712000,"contributors":[{"name":"Zhengqbbb","email":"1074059947@qq.com","commits":1}]},"filePathRelative":"zh/guide/recipes.md"}')},8124:(s,n,a)=>{a.r(n),a.d(n,{default:()=>gs});var t=a(7293);const p=(0,t.uE)('<h1 id="小窍门" tabindex="-1"><a class="header-anchor" href="#小窍门" aria-hidden="true">#</a> 小窍门</h1><h2 id="scopes" tabindex="-1"><a class="header-anchor" href="#scopes" aria-hidden="true">#</a> scopes</h2><blockquote><p>scopes，通常来定义本次 commit 涉及范围，一般有两种：根据<strong>项目代码层面区分</strong>比如 monorepo ，另外一种就是<strong>项目业务区分</strong></p></blockquote><h3 id="针对-项目代码-的-scopes" tabindex="-1"><a class="header-anchor" href="#针对-项目代码-的-scopes" aria-hidden="true">#</a> 针对 项目代码 的 scopes</h3>',4),e=(0,t.Uk)("如果你需要管理多软件包在commit时获得更好的体验，比如使用: "),o={href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("pnpm"),l=(0,t.Uk)(" | "),u={href:"https://lerna.js.org/",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("lerna.js"),r=(0,t.Uk)(" 管理 monorepo 可以利用 "),k=(0,t._)("code",null,"path",-1),d=(0,t.Uk)(" 和 "),g=(0,t._)("code",null,"fs",-1),m=(0,t.Uk)(" 模块动态定义 commit message 中的scopes(范围)显示"),h=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span> \n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>packages<span class="token punctuation">]</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',1),f=(0,t.Uk)("当然如果你使用 "),b={href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Uk)("commitlint"),y=(0,t.Uk)(" 规则定义了 "),x=(0,t._)("code",null,"scope-enum",-1),q=(0,t.Uk)("，会自动引入"),_=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;scope-enum&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token operator">...</span>packages <span class="token punctuation">]</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p><img src="https://user-images.githubusercontent.com/40693636/172984678-b187607e-e67d-43b4-93e5-3d359f5044a9.gif" alt="demo-gif"></p><h4 id="支持多选-scopes" tabindex="-1"><a class="header-anchor" href="#支持多选-scopes" aria-hidden="true">#</a> 支持多选 scopes</h4><ul><li>使用 <kbd>→</kbd> 或 <kbd>空格</kbd> 选中</li><li>使用 <kbd>回车</kbd> 确定</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span> \n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>packages<span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">enableMultipleScopes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">scopeEnumSeparator</span><span class="token operator">:</span> <span class="token string">&quot;,&quot;</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div><p><img src="https://user-images.githubusercontent.com/40693636/170836009-26331ad3-8e7f-4183-a4af-15372b6420d6.gif" alt="demo-gif"></p><br><br><h3 id="针对-项目业务-的-scopes" tabindex="-1"><a class="header-anchor" href="#针对-项目业务-的-scopes" aria-hidden="true">#</a> 针对 项目业务 的 scopes</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">]</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>当然如果你想给模块范围自定义添加 <strong>描述信息</strong> 显示在命令行中可以使用 <code>name</code> 和 <code>value</code>属性来定义</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> packages <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>     <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;app:       系统业务&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;home:      首页相关&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;account&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;account:   账户相关&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;comment&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;comment:   评论相关&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://user-images.githubusercontent.com/40693636/172988729-b76510d8-108b-4588-a748-86042da3d5ef.gif" alt="demo-gif"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果 <code>cz-git</code> 检测到如果 <code>allowEmptyScopes</code> 和 <code>allowCustomScopes</code> 具有非常严格规则(都设置为false)并且 <strong>scopes 选择列表仅有一项时</strong>，会自动跳过问题并输出</p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>下面代码可以运行时获取到 <code>HOME</code> 目录，<br>你可以使用它配合 <code>fs</code>和<code>path</code> 进行<strong>默认的全局自定义配置</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">USER_HOME</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">HOME</span> <span class="token operator">||</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USERPROFILE</span><span class="token punctuation">;</span>\n<span class="token comment">// console.log(USER_HOME) === echo &quot;$HOME&quot;</span>\n</code></pre></div></div><br><br><h2 id="issueprefixs" tabindex="-1"><a class="header-anchor" href="#issueprefixs" aria-hidden="true">#</a> issuePrefixs</h2>',18),j=(0,t.Uk)("国内用户如果使用 Gitee 作为项目管理，那么该工具可以很好 "),w=(0,t._)("mark",null,"利用 commit message改变issue状态",-1),U=(0,t.Uk)(),S=(0,t._)("br",null,null,-1),E=(0,t.Uk)(" 详情： "),I={href:"https://gitee.com/help/articles/4141#article-header2",target:"_blank",rel:"noopener noreferrer"},C=(0,t.Uk)("Commit 关联Issue"),P=(0,t.Uk)(),z=(0,t._)("br",null,null,-1),O=(0,t.Uk)(" 通过设置任务状态指令，即起issue状态变更的别名，通过选择别名和输入issue号，可以很好的关联管理issue"),M=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">issuePrefixs</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// @see: https://gitee.com/help/articles/4141#article-header2</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;wip&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;wip:      将任务状态更改为进行中&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;finish&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;finish:   将任务状态更改为待完成&quot;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><img src="https://user-images.githubusercontent.com/40693636/172990760-f762d329-f710-4560-98fa-c8414d17c9f3.gif" alt="demo-gif"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果 <code>cz-git</code> 检测到如果 <code>allowCustomIssuePrefixs</code> 和 <code>allowEmptyIssuePrefixs</code> 具有非常严格规则(都设置为false)并且 <strong>issuePrefixs 选择列表仅有一项时</strong>，会自动跳过问题并输出</p></div><br><br><br><h2 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> default</h2><h3 id="defaultscope" tabindex="-1"><a class="header-anchor" href="#defaultscope" aria-hidden="true">#</a> defaultScope</h3>',8),W=(0,t.Uk)("自动获取 “代码修改范围”。 适用于存在很多范围选项（例如组件库、monorepo）的情况。 "),H=(0,t.Uk)("例如 "),N={href:"https://github.com/Tencent/tdesign-vue-next",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("tdesign-vue-next"),A=(0,t.Uk)("，这是一个 vue3 组件库，在 "),D=(0,t._)("code",null,"src",-1),T=(0,t.Uk)(" 中存储了超过 60 个组件"),$=(0,t._)("li",null,"但与此同时其项目路径结构十分清晰",-1),B=(0,t._)("li",null,[(0,t.Uk)("我们可以通过"),(0,t._)("code",null,"git status"),(0,t.Uk)("获取已修改文件缓存区的路径")],-1),F=(0,t._)("li",null,[(0,t.Uk)("进行字符串匹配截取，获得匹配成功的 "),(0,t._)("code",null,"scope")],-1),L=(0,t._)("li",null,"再传递给 defaultScope，在选择列表中进行置顶",-1),Z=(0,t.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// commitlint.config.js</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// precomputed scope</span>\n<span class="token keyword">const</span> scopeComplete <span class="token operator">=</span> <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;git status --porcelain || true&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">~</span>r<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;M  src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token operator">?.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\/)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;%%&#39;</span><span class="token punctuation">)</span>\n  <span class="token operator">?.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">src%%((\\w|-)*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;cz-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UserConfig<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">defaultScope</span><span class="token operator">:</span> scopeComplete<span class="token punctuation">,</span>\n    <span class="token literal-property property">customScopesAlign</span><span class="token operator">:</span> <span class="token operator">!</span>scopeComplete <span class="token operator">?</span> <span class="token string">&#39;top-bottom&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div><p><img src="https://user-images.githubusercontent.com/40693636/172989830-c3e436ad-adab-42f5-973f-b97f33748939.gif" alt="demo-gif"></p><br><br><h3 id="defaultsubject" tabindex="-1"><a class="header-anchor" href="#defaultsubject" aria-hidden="true">#</a> defaultSubject</h3><blockquote><p>适用于 <code>defaultBody, customFooterPrefixs, defaultIssues</code></p></blockquote>',6),G=(0,t._)("strong",null,"初始化补全模板",-1),J=(0,t.Uk)("，可使用 "),K=(0,t._)("kbd",null,"Tab",-1),Q=(0,t.Uk)(" 或者 "),V=(0,t._)("kbd",null,"→",-1),X=(0,t.Uk)(" 进行快速补全；亦可直接使用 "),Y=(0,t._)("kbd",null,"Enter",-1),ss=(0,t.Uk)(" 输出模板。"),ns=(0,t._)("br",null,null,-1),as=(0,t.Uk)("适用于"),ts=(0,t._)("strong",null,"细分类别，提供前置模板信息，直接输出模板",-1),ps=(0,t.Uk)("... "),es=(0,t.Uk)("例如 "),os={href:"https://github.com/element-plus/element-plus",target:"_blank",rel:"noopener noreferrer"},cs=(0,t.Uk)("Element-Plus"),ls=(0,t.Uk)("，这是一个 vue3 组件库，其关于组件方面修改的 commit 非常严格"),us=(0,t.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># rule：https://github.com/element-plus/element-plus/blob/dev/commit-example.md</span>\n<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span>: <span class="token punctuation">[</span>messages<span class="token punctuation">]</span>\n<span class="token comment"># e.g:</span>\nfeat<span class="token punctuation">(</span>components<span class="token punctuation">)</span>: <span class="token punctuation">[</span>button<span class="token punctuation">]</span> I did something with button\n</code></pre></div><ul><li>我们可以通过<code>git status</code>中的信息进行组件名的字符串匹配提取</li><li>再传递给 defaultSubject，如此一来可以快速进行补全，减少重复性输入以及拼写错误</li></ul>',2),is=(0,t.uE)('<br><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// commitlint.config.js</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> gitStatus <span class="token operator">=</span> <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;git status --porcelain || true&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> subjectComplete <span class="token operator">=</span> gitStatus\n  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">~</span>r<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;M  packages/components&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token operator">?.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;%%&#39;</span><span class="token punctuation">)</span>\n  <span class="token operator">?.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">packages%%components%%((\\w|-)*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n\n<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;cz-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UserConfig<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">defaultSubject</span><span class="token operator">:</span> subjectComplete <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>subjectComplete<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">] </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br></div></div><p><img src="https://user-images.githubusercontent.com/40693636/173278720-d93f17ec-ef98-4706-8dec-101d5b68bf08.gif" alt="demo-gif"></p><br><br><h3 id="defaultissues" tabindex="-1"><a class="header-anchor" href="#defaultissues" aria-hidden="true">#</a> defaultIssues</h3>',6),rs=(0,t.uE)("<li><p>自动获取 <code>Issue Number</code>，重复查询填写<code>issue number</code> 是一件很麻烦的事情，尤其在 gitee 反人类设计</p><ul><li>但是如果规范了团队的分支命令规则(e.g: fix/issue_33)</li><li>然后我们利用 <code>Node</code> 的 <code>execSync</code> 通过命令获取到分支名</li><li>再对获取的字符串进行处理</li><li>接着我们利用 <code>defaultIssues</code></li><li>使用时我们只需要按下 <kbd>回车</kbd> 键就可以输出<code>Issue Number</code>,如此一来我们可以很方便截取到 <code>Issue Number</code> 减少重复性工作。</li></ul></li>",1),ks=(0,t.uE)('<p>我们也可以结合 <code>customIssuePrefixsAlign</code> 配置项来动态改变 issue 前缀的选择项位置</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js </span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// @tip: git branch name = feature/issue_33   =&gt;    auto get defaultIssues = #33</span>\n <span class="token keyword">const</span> issue <span class="token operator">=</span> <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">&#39;git rev-parse --abbrev-ref HEAD&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n\n<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;cz-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UserConfig<span class="token punctuation">}</span></span> */</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">customIssuePrefixsAlign</span><span class="token operator">:</span> <span class="token operator">!</span>issue <span class="token operator">?</span> <span class="token string">&quot;top&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;bottom&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">defaultIssues</span><span class="token operator">:</span> <span class="token operator">!</span>issue <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>issue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div></div><p><img src="https://user-images.githubusercontent.com/40693636/162552804-132aab02-4b02-4006-9e41-aeae4f825948.gif" alt="demo-gif"></p><br><br><br><blockquote><p>这就是脚本的力量，利用可高度可定制的 <code>cz-git</code> 让 commit 更方便，更契合习惯，欢迎分享。</p></blockquote>',7),ds={},gs=(0,a(8868).Z)(ds,[["render",function(s,n){const a=(0,t.up)("ExternalLinkIcon"),ds=(0,t.up)("Badge");return(0,t.wg)(),(0,t.iD)("div",null,[p,(0,t._)("p",null,[e,(0,t._)("a",o,[c,(0,t.Wm)(a)]),l,(0,t._)("a",u,[i,(0,t.Wm)(a)]),r,k,d,g,m]),h,(0,t._)("p",null,[f,(0,t._)("a",b,[v,(0,t.Wm)(a)]),y,x,q]),_,(0,t._)("p",null,[j,w,U,S,E,(0,t._)("a",I,[C,(0,t.Wm)(a)]),P,z,O]),M,(0,t._)("ul",null,[(0,t._)("li",null,[W,(0,t._)("ul",null,[(0,t._)("li",null,[H,(0,t._)("a",N,[R,(0,t.Wm)(a)]),A,D,T]),$,B,F,L])])]),Z,(0,t._)("ul",null,[(0,t._)("li",null,[G,J,K,Q,V,X,Y,ss,ns,as,ts,ps,(0,t._)("ul",null,[(0,t._)("li",null,[es,(0,t._)("a",os,[cs,(0,t.Wm)(a)]),ls])]),us])]),is,(0,t._)("ul",null,[rs,(0,t._)("li",null,[(0,t.Wm)(ds,{type:"tip",text:"提示",vertical:"middle"})])]),ks])}]])}}]);